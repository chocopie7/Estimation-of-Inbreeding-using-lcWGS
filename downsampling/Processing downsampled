{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyN2n6ZXvhvq1ZZmKBUrd79n"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"k92OwB_2n_68","executionInfo":{"status":"ok","timestamp":1745016799754,"user_tz":420,"elapsed":5044,"user":{"displayName":"Kim J","userId":"00693939407288198498"}},"outputId":"2a72f2cd-caa2-4a59-996b-13630e031d1e"},"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive/; to attempt to forcibly remount, call drive.mount(\"/content/drive/\", force_remount=True).\n"]}],"source":["import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","import os\n","\n","from sklearn import linear_model\n","import statsmodels.api as sm\n","from google.colab import drive\n","drive.mount('/content/drive/')"]},{"cell_type":"code","source":["cd /content/drive/MyDrive/Colab Notebooks/Pellegrini Projects/Inbreeding/downsampling"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rItyWx9poVGq","executionInfo":{"status":"ok","timestamp":1745016799769,"user_tz":420,"elapsed":13,"user":{"displayName":"Kim J","userId":"00693939407288198498"}},"outputId":"ce4ce9e3-323f-437b-bd3e-67535b25ecf2"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["/content/drive/MyDrive/Colab Notebooks/Pellegrini Projects/Inbreeding/downsampling\n"]}]},{"cell_type":"code","source":["#import inbreeding file\n","df=pd.read_fwf(\"inbreeding.het\")"],"metadata":{"id":"3zq5sTiGonMA","executionInfo":{"status":"ok","timestamp":1745016799812,"user_tz":420,"elapsed":40,"user":{"displayName":"Kim J","userId":"00693939407288198498"}}},"execution_count":3,"outputs":[]},{"cell_type":"code","source":["index=[]\n","for i in df['FID']:\n","  index.append(i.split('_')[4].split('p')[0])\n","df.index=index\n","df.sort_index(inplace=True)\n","\n","df.drop(labels='FID',axis=1,inplace=True)\n","df.drop(labels='IID',axis=1,inplace=True)\n","df.drop(labels='O(HOM)',axis=1,inplace=True)\n","df.drop(labels='E(HOM)',axis=1,inplace=True)\n","df.drop(labels='N(NM)',axis=1,inplace=True)"],"metadata":{"id":"GiEQ1DwBs2Ft","executionInfo":{"status":"ok","timestamp":1745016799826,"user_tz":420,"elapsed":15,"user":{"displayName":"Kim J","userId":"00693939407288198498"}}},"execution_count":4,"outputs":[]},{"cell_type":"code","source":["df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"y9qPoM9EtNNL","executionInfo":{"status":"ok","timestamp":1745016799883,"user_tz":420,"elapsed":58,"user":{"displayName":"Kim J","userId":"00693939407288198498"}},"outputId":"3a3080b3-0d83-4ed6-d32a-355d5e1afb10"},"execution_count":5,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         F\n","1   0.9041\n","10  0.5654\n","11  0.5304\n","12  0.4960\n","13  0.4601\n","..     ...\n","95 -1.2380\n","96 -1.2490\n","97 -1.2590\n","98 -1.2690\n","99 -1.2800\n","\n","[99 rows x 1 columns]"],"text/html":["\n","  <div id=\"df-42694e23-03fe-4244-84a3-e68961a9fb2f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>F</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>0.9041</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>0.5654</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>0.5304</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>0.4960</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>0.4601</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>95</th>\n","      <td>-1.2380</td>\n","    </tr>\n","    <tr>\n","      <th>96</th>\n","      <td>-1.2490</td>\n","    </tr>\n","    <tr>\n","      <th>97</th>\n","      <td>-1.2590</td>\n","    </tr>\n","    <tr>\n","      <th>98</th>\n","      <td>-1.2690</td>\n","    </tr>\n","    <tr>\n","      <th>99</th>\n","      <td>-1.2800</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>99 rows Ã— 1 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-42694e23-03fe-4244-84a3-e68961a9fb2f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-42694e23-03fe-4244-84a3-e68961a9fb2f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-42694e23-03fe-4244-84a3-e68961a9fb2f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-cbead365-1910-4ddc-9800-bba99d2bb241\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-cbead365-1910-4ddc-9800-bba99d2bb241')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-cbead365-1910-4ddc-9800-bba99d2bb241 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_adab0174-8c8d-4772-bf1c-9ada92b66940\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_adab0174-8c8d-4772-bf1c-9ada92b66940 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 99,\n  \"fields\": [\n    {\n      \"column\": \"F\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.6401964868613376,\n        \"min\": -1.28,\n        \"max\": 0.9041,\n        \"num_unique_values\": 99,\n        \"samples\": [\n          -0.8861,\n          -0.5075,\n          -1.249\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["cd /content/drive/MyDrive/Colab Notebooks/Pellegrini Projects/Inbreeding/downsampling/head40_qc"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"NTiWPJxw8lFI","executionInfo":{"status":"ok","timestamp":1745016799887,"user_tz":420,"elapsed":4,"user":{"displayName":"Kim J","userId":"00693939407288198498"}},"outputId":"841b94ca-2149-46cc-aad4-93f24a96376f"},"execution_count":6,"outputs":[{"output_type":"stream","name":"stdout","text":["/content/drive/MyDrive/Colab Notebooks/Pellegrini Projects/Inbreeding/downsampling/head40_qc\n"]}]},{"cell_type":"code","source":["filelist=os.listdir('/content/drive/MyDrive/Colab Notebooks/Pellegrini Projects/Inbreeding/downsampling/head40_qc')"],"metadata":{"id":"4PtWsHe7r_ZD","executionInfo":{"status":"ok","timestamp":1745016799895,"user_tz":420,"elapsed":8,"user":{"displayName":"Kim J","userId":"00693939407288198498"}}},"execution_count":7,"outputs":[]},{"cell_type":"code","source":["#import qc file\n","average_coverage={}\n","for i in filelist:\n","  df_qc=pd.read_table(i)\n","  average_coverage[i.split('_')[3].split(\"p\")[0]]=df_qc['meandepth'].mean()\n","df['meandepth'] = df.index.map(average_coverage)"],"metadata":{"id":"o4a4invFp_-9","executionInfo":{"status":"ok","timestamp":1745016800755,"user_tz":420,"elapsed":859,"user":{"displayName":"Kim J","userId":"00693939407288198498"}}},"execution_count":8,"outputs":[]},{"cell_type":"code","source":["cd /content/drive/MyDrive/Colab Notebooks/Pellegrini Projects/Inbreeding/downsampling/roh"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2dUC4ITy8_YJ","executionInfo":{"status":"ok","timestamp":1745016800756,"user_tz":420,"elapsed":7,"user":{"displayName":"Kim J","userId":"00693939407288198498"}},"outputId":"fabc984b-837a-4dd9-f418-49892a9593a4"},"execution_count":9,"outputs":[{"output_type":"stream","name":"stdout","text":["/content/drive/MyDrive/Colab Notebooks/Pellegrini Projects/Inbreeding/downsampling/roh\n"]}]},{"cell_type":"code","source":["filelist=os.listdir('/content/drive/MyDrive/Colab Notebooks/Pellegrini Projects/Inbreeding/downsampling/roh')"],"metadata":{"id":"GacXHvN2f73Y","executionInfo":{"status":"ok","timestamp":1745016800757,"user_tz":420,"elapsed":4,"user":{"displayName":"Kim J","userId":"00693939407288198498"}}},"execution_count":10,"outputs":[]},{"cell_type":"code","source":["df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"WZkUgd_oC1dJ","executionInfo":{"status":"ok","timestamp":1745016800761,"user_tz":420,"elapsed":7,"user":{"displayName":"Kim J","userId":"00693939407288198498"}},"outputId":"41bad842-b5f2-4aed-b275-58b5225c6e7d"},"execution_count":11,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         F  meandepth\n","1   0.9041   0.024927\n","10  0.5654   0.249587\n","11  0.5304   0.274472\n","12  0.4960   0.299368\n","13  0.4601   0.324367\n","..     ...        ...\n","95 -1.2380   2.371050\n","96 -1.2490   2.396038\n","97 -1.2590   2.420946\n","98 -1.2690   2.445945\n","99 -1.2800   2.470939\n","\n","[99 rows x 2 columns]"],"text/html":["\n","  <div id=\"df-5a6cb165-812e-41d9-bf27-67b83785a554\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>F</th>\n","      <th>meandepth</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>0.9041</td>\n","      <td>0.024927</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>0.5654</td>\n","      <td>0.249587</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>0.5304</td>\n","      <td>0.274472</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>0.4960</td>\n","      <td>0.299368</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>0.4601</td>\n","      <td>0.324367</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>95</th>\n","      <td>-1.2380</td>\n","      <td>2.371050</td>\n","    </tr>\n","    <tr>\n","      <th>96</th>\n","      <td>-1.2490</td>\n","      <td>2.396038</td>\n","    </tr>\n","    <tr>\n","      <th>97</th>\n","      <td>-1.2590</td>\n","      <td>2.420946</td>\n","    </tr>\n","    <tr>\n","      <th>98</th>\n","      <td>-1.2690</td>\n","      <td>2.445945</td>\n","    </tr>\n","    <tr>\n","      <th>99</th>\n","      <td>-1.2800</td>\n","      <td>2.470939</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>99 rows Ã— 2 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5a6cb165-812e-41d9-bf27-67b83785a554')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-5a6cb165-812e-41d9-bf27-67b83785a554 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-5a6cb165-812e-41d9-bf27-67b83785a554');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-e62229c3-8f6b-4a82-9f95-b2627afe2f5b\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e62229c3-8f6b-4a82-9f95-b2627afe2f5b')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-e62229c3-8f6b-4a82-9f95-b2627afe2f5b button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_9eedc8ab-fa73-4a34-bef8-f35d9f14b3a2\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_9eedc8ab-fa73-4a34-bef8-f35d9f14b3a2 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 99,\n  \"fields\": [\n    {\n      \"column\": \"F\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.6401964868613376,\n        \"min\": -1.28,\n        \"max\": 0.9041,\n        \"num_unique_values\": 99,\n        \"samples\": [\n          -0.8861,\n          -0.5075,\n          -1.249\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"meandepth\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.7169048431326293,\n        \"min\": 0.024927353846153848,\n        \"max\": 2.470938717948718,\n        \"num_unique_values\": 99,\n        \"samples\": [\n          1.647261794871795,\n          1.148221153846154,\n          2.396038461538461\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":11}]},{"cell_type":"code","source":["#import roh file\n","df_roh=pd.DataFrame()\n","for i in filelist:\n","  df_roh=pd.concat([df_roh,pd.read_fwf(i)])\n","index=[]\n","for i in df_roh['FID']:\n","  index.append(i.split('_')[4].split('p')[0])\n","\n","df_roh.index=index\n","df_roh.sort_index(inplace=True)\n","df=df.join(df_roh)\n","df.drop(labels='FID',axis=1,inplace=True)\n","df.drop(labels='IID',axis=1,inplace=True)\n","df.drop(labels='PHE',axis=1,inplace=True)"],"metadata":{"id":"K7DbkSK_f49N","executionInfo":{"status":"ok","timestamp":1745016801563,"user_tz":420,"elapsed":802,"user":{"displayName":"Kim J","userId":"00693939407288198498"}}},"execution_count":12,"outputs":[]},{"cell_type":"code","source":["df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"fJ1klDEJsUkF","executionInfo":{"status":"ok","timestamp":1745016801653,"user_tz":420,"elapsed":77,"user":{"displayName":"Kim J","userId":"00693939407288198498"}},"outputId":"0b63495e-dfb0-43dc-cf04-dec1dc213161"},"execution_count":13,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         F  meandepth  NSEG          KB     KBAVG\n","1   0.9041   0.024927    66  2067130.00  31320.10\n","10  0.5654   0.249587   615  1184150.00   1925.44\n","11  0.5304   0.274472   552   998695.00   1809.23\n","12  0.4960   0.299368   491   854640.00   1740.61\n","13  0.4601   0.324367   426   702687.00   1649.50\n","..     ...        ...   ...         ...       ...\n","95 -1.2380   2.371050     1     3787.47   3787.47\n","96 -1.2490   2.396038     1     3787.47   3787.47\n","97 -1.2590   2.420946     1     3787.47   3787.47\n","98 -1.2690   2.445945     1     3787.47   3787.47\n","99 -1.2800   2.470939     1     3787.47   3787.47\n","\n","[99 rows x 5 columns]"],"text/html":["\n","  <div id=\"df-572db3fc-c12d-4d3b-a20f-21c6e20b5721\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>F</th>\n","      <th>meandepth</th>\n","      <th>NSEG</th>\n","      <th>KB</th>\n","      <th>KBAVG</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>0.9041</td>\n","      <td>0.024927</td>\n","      <td>66</td>\n","      <td>2067130.00</td>\n","      <td>31320.10</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>0.5654</td>\n","      <td>0.249587</td>\n","      <td>615</td>\n","      <td>1184150.00</td>\n","      <td>1925.44</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>0.5304</td>\n","      <td>0.274472</td>\n","      <td>552</td>\n","      <td>998695.00</td>\n","      <td>1809.23</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>0.4960</td>\n","      <td>0.299368</td>\n","      <td>491</td>\n","      <td>854640.00</td>\n","      <td>1740.61</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>0.4601</td>\n","      <td>0.324367</td>\n","      <td>426</td>\n","      <td>702687.00</td>\n","      <td>1649.50</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>95</th>\n","      <td>-1.2380</td>\n","      <td>2.371050</td>\n","      <td>1</td>\n","      <td>3787.47</td>\n","      <td>3787.47</td>\n","    </tr>\n","    <tr>\n","      <th>96</th>\n","      <td>-1.2490</td>\n","      <td>2.396038</td>\n","      <td>1</td>\n","      <td>3787.47</td>\n","      <td>3787.47</td>\n","    </tr>\n","    <tr>\n","      <th>97</th>\n","      <td>-1.2590</td>\n","      <td>2.420946</td>\n","      <td>1</td>\n","      <td>3787.47</td>\n","      <td>3787.47</td>\n","    </tr>\n","    <tr>\n","      <th>98</th>\n","      <td>-1.2690</td>\n","      <td>2.445945</td>\n","      <td>1</td>\n","      <td>3787.47</td>\n","      <td>3787.47</td>\n","    </tr>\n","    <tr>\n","      <th>99</th>\n","      <td>-1.2800</td>\n","      <td>2.470939</td>\n","      <td>1</td>\n","      <td>3787.47</td>\n","      <td>3787.47</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>99 rows Ã— 5 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-572db3fc-c12d-4d3b-a20f-21c6e20b5721')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-572db3fc-c12d-4d3b-a20f-21c6e20b5721 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-572db3fc-c12d-4d3b-a20f-21c6e20b5721');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-c6e3f67e-adc6-420d-af5f-773f0957e8a6\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c6e3f67e-adc6-420d-af5f-773f0957e8a6')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-c6e3f67e-adc6-420d-af5f-773f0957e8a6 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_a8419001-8f9b-4306-b9d2-7fec7f79912b\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_a8419001-8f9b-4306-b9d2-7fec7f79912b button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 99,\n  \"fields\": [\n    {\n      \"column\": \"F\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.6401964868613376,\n        \"min\": -1.28,\n        \"max\": 0.9041,\n        \"num_unique_values\": 99,\n        \"samples\": [\n          -0.8861,\n          -0.5075,\n          -1.249\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"meandepth\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.7169048431326293,\n        \"min\": 0.024927353846153848,\n        \"max\": 2.470938717948718,\n        \"num_unique_values\": 99,\n        \"samples\": [\n          1.647261794871795,\n          1.148221153846154,\n          2.396038461538461\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"NSEG\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 174,\n        \"min\": 0,\n        \"max\": 647,\n        \"num_unique_values\": 43,\n        \"samples\": [\n          535,\n          22,\n          20\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"KB\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 573208.506984848,\n        \"min\": 0.0,\n        \"max\": 2281340.0,\n        \"num_unique_values\": 51,\n        \"samples\": [\n          1035.9,\n          2081.34,\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"KBAVG\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3515.805546121066,\n        \"min\": 0.0,\n        \"max\": 31320.1,\n        \"num_unique_values\": 51,\n        \"samples\": [\n          1035.9,\n          1040.67,\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":13}]},{"cell_type":"code","source":["#cd /content/drive/MyDrive/Colab Notebooks/Pellegrini Projects/Inbreeding/downsampling"],"metadata":{"id":"R9iyQ2QkEFbo","executionInfo":{"status":"ok","timestamp":1745016801691,"user_tz":420,"elapsed":36,"user":{"displayName":"Kim J","userId":"00693939407288198498"}}},"execution_count":14,"outputs":[]},{"cell_type":"code","source":["#df.to_csv(\"downsampled_file.csv\")"],"metadata":{"id":"QIrNQu32tvji","executionInfo":{"status":"ok","timestamp":1745016801692,"user_tz":420,"elapsed":2,"user":{"displayName":"Kim J","userId":"00693939407288198498"}}},"execution_count":15,"outputs":[]},{"cell_type":"code","source":["df.plot.scatter(x='meandepth', y='F')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":471},"id":"2wkAh0DCsU7k","executionInfo":{"status":"ok","timestamp":1745016802100,"user_tz":420,"elapsed":410,"user":{"displayName":"Kim J","userId":"00693939407288198498"}},"outputId":"eb839cd8-74f3-4cd1-e306-ec0c06769502"},"execution_count":16,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: xlabel='meandepth', ylabel='F'>"]},"metadata":{},"execution_count":16},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["df.plot.scatter(x='meandepth', y='KB')"],"metadata":{"id":"na52fFaZD223","colab":{"base_uri":"https://localhost:8080/","height":483},"executionInfo":{"status":"ok","timestamp":1745016802408,"user_tz":420,"elapsed":307,"user":{"displayName":"Kim J","userId":"00693939407288198498"}},"outputId":"6279d8b5-4683-41d6-997f-312d16c63659"},"execution_count":17,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: xlabel='meandepth', ylabel='KB'>"]},"metadata":{},"execution_count":17},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"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73//u+6++24NGPDVj2VLS4tvqwMAAPCSV+Fm0aJFHs9/+MMfntfnxhtvvLCKAAAALoBX4WbcuHG67777Ot1++vRpfe9737vgogAAAHrLq6ng//Zv/6b169d3uM3lcmnOnDmqq6vzSWEAAAC94VW4eemll3TXXXfpv/7rvzzam5qaNHv2bJ08eVK7du3yaYEAAADe8GpY6uabb9apU6eUk5OjP/7xj5o+fbr7jE1NTY327t2rYcOG+atWAACAbnk9W+qOO+5QfX29brjhBm3ZskUPP/ywPvvsM4INAAAICr26ceYDDzyg+vp6fec731FycrL27Nmj4cOH+7o2AAAAr3kVbm666SaP5xEREXI4HLr33ns92t94440LrwwAAKAXvAo3drvd43lOTo5PiwEAALhQXoWbF1980V91AAAA+IRXU8EBAACCHeEGAABYCuEGAABYCuEGAABYCuEGAABYiqnhprCwUPPmzdOwYcNks9m0efPmbvfZs2ePrr76akVGRio1NVX5+fl+rxMAAIQOU8ONy+XS+PHjtWbNmh71r6io0Ny5czVjxgyVlJRoxYoVuuOOO/TWW2/5uVJrK3c2afexk6qodZldCgAAF6xXt1/wlTlz5mjOnDk97r927VqlpKToySeflCRdccUVeuedd/T0009r9uzZ/irTsk41n9HyghIVljrdbdlp8crLSZc9OsLEygAA6L2QuuZm3759mjlzpkfb7NmztW/fPpMqCm3LC0pUVFbr0VZUVqtlBcUmVQQAwIUz9cyNt6qrq5WQkODRlpCQoMbGRn3xxRe66KKLztunpaVFLS0t7ueNjY1+rzMUlDubPM7YnNNqGCosdaqi1qUUxwATKgMA4MKE1Jmb3sjNzZXdbnc/kpKSzC4pKFTVN3e5vbKO628AAKEppMLN0KFDVVNT49FWU1OjmJiYDs/aSNKqVavU0NDgfnzyySeBKDXojYyN7nJ7chxnbQAAoSmkhqUyMzP15ptverTt2LFDmZmZne4TGRmpyMhIf5cWckbFD1R2WryKymrVahju9nCbTVmpDoakAAAhy9QzN01NTSopKVFJSYmkr6Z6l5SU6Pjx45K+OuuycOFCd/+7775b5eXleuCBB/TRRx/pN7/5jV599VXdd999ZpQf8vJy0pWV6vBoy0p1KC8n3aSKAAC4cDbD+Mb/tgfYnj17NGPGjPPaFy1apPz8fN12222qrKzUnj17PPa577779OGHH2r48OF66KGHdNttt/X4PRsbG2W329XQ0KCYmBgffIrQV1HrUmWdS8lxAzhjAwAISt78fpsabsxAuAEAIPR48/sdUhcUAwAAdIdwAwAALIVwAwAALIVwAwAALIVwAwAALIVwAwAALIVwAwAALIVwAwAALIVwAwAALIVwAwAALIVwAwAALKWf2QUg+JQ7m1RV38yNNAEAIYlwA7dTzWe0vKBEhaVOd1t2WrzyctJlj44wsTIAAHqOYSm4LS8oUVFZrUdbUVmtlhUUm1QRAADeI9xA0ldDUYWlTrUahkd7q2GosNSpilqXSZUBAOAdwg0kSVX1zV1ur6wj3AAAQgPhBpKkkbHRXW5PjuPCYgBAaCDcQJI0Kn6gstPiFW6zebSH22zKTotn1hQAIGQQbuCWl5OurFSHR1tWqkN5OekmVQQAgPeYCg43e3SE1i/OUEWtS5V1Lta5AQCEJMINzpPiINQAAEIXw1IAAMBSCDcAAMBSCDcAAMBSCDcAAMBSCDcAAMBSCDcAAMBSCDcAAMBSCDcAAMBSCDcAAMBSCDcAAMBSCDcAAMBSCDcAAMBSuHEmeqTc2aSq+mbuFA4ACHqEG3TpVPMZLS8oUWGp092WnRavvJx02aMjTKwMAICOMSyFLi0vKFFRWa1HW1FZrZYVFJtUEQAAXSPcoFPlziYVljrVahge7a2GocJSpypqXSZVBgBA5wg36FRVfXOX2yvrCDcAgOBDuEGnRsZGd7k9OY4LiwEAwYdwg06Nih+o7LR4hdtsHu3hNpuy0+KZNQUACEqEG3QpLyddWakOj7asVIfyctJNqggAgK4xFRxdskdHaP3iDFXUulRZ52KdGwBA0CPcoEdSHIQaAEBoYFgKAABYCuEGAABYCuEGAABYCuEGAABYCuEGAABYCuEGAABYClPB0WvlziZV1Tez9g0AIKgQbuC1U81ntLygRIWlTndbdlq88nLSZY+OMLEyAAAYlkIvLC8oUVFZrUdbUVmtlhUUm1QRAABfI9zAK+XOJhWWOtVqGB7trYahwlKnKmpdJlUGAMBXCDfwSlV9c5fbK+sINwAAcxFu4JWRsdFdbk+O48JiAIC5CDfwyqj4gcpOi1e4zebRHm6zKTstnllTAADTEW7gtbycdGWlOjzaslIdystJN6kiAAC+xlRweM0eHaH1izNUUetSZZ2LdW4AAEGFcINeS3EQagAAwYdhKQAAYCmEGwAAYCmEGwAAYCmEGwAAYClBEW7WrFmj5ORkRUVFafLkyTpw4ECnffPz82Wz2TweUVFRAawWAAAEM9PDzSuvvKKVK1fqkUce0aFDhzR+/HjNnj1bJ0+e7HSfmJgYnThxwv2oqqoKYMUAACCYmR5unnrqKd155526/fbbdeWVV2rt2rWKjo7WCy+80Ok+NptNQ4cOdT8SEhICWDEAAAhmpoabM2fO6ODBg5o5c6a7LSwsTDNnztS+ffs63a+pqUkjR45UUlKSbrjhBn3wwQed9m1paVFjY6PHAwAAWJep4aa2tlatra3nnXlJSEhQdXV1h/uMHj1aL7zwgrZs2aI//OEPamtr09SpU/W3v/2tw/65ubmy2+3uR1JSks8/B75S7mzS7mMnVVHLncEBAOYJuRWKMzMzlZmZ6X4+depUXXHFFXr22Wf16KOPntd/1apVWrlypft5Y2MjAcfHTjWf0fKCEhWWOt1t2WnxystJlz06wsTKAAB9kalnbhwOh8LDw1VTU+PRXlNTo6FDh/boNSIiIpSenq6ysrIOt0dGRiomJsbjAd9aXlCiorJaj7aislotKyg2qSIAQF9marjp37+/Jk6cqJ07d7rb2tratHPnTo+zM11pbW3V4cOHlZiY6K8y0YVyZ5MKS51qNQyP9lbDUGGpkyEqAEDAmT4stXLlSi1atEjf+ta3lJGRoWeeeUYul0u33367JGnhwoW65JJLlJubK0n66U9/qilTpig1NVWnTp3S448/rqqqKt1xxx1mfow+q6q+ucvtlXUubq4JAAgo08PNggUL5HQ69fDDD6u6uloTJkzQtm3b3BcZHz9+XGFhX59g+vzzz3XnnXequrpagwcP1sSJE/Xuu+/qyiuvNOsj9GkjY6O73J4cR7ABAASWzTDajSdYXGNjo+x2uxoaGrj+xkcW/u6AispqPYamwm02ZaU6tH5xhomVAQCswpvfb9MX8UPoy8tJV1aqw6MtK9WhvJx0kyoCAPRlpg9LIfTZoyO0fnGGKmpdqqxzKTluANfZAABMQ7iBz6Q4CDUAAPMxLAUAACyFcAMAACyFcAMAACyFa27gV+XOJlXVN3ORMQAgYAg38AtupgkAMAvDUvALbqYJADAL4QY+x800AQBmItzA53pyM00AAPyFcAOf42aaAAAzEW7gc6PiByo7LV7hNptHe7jNpuy0eGZNAQD8inADv+BmmgAAszAVHH7BzTQBAGYh3MCv2t9Mk0X9AAD+RrhBQLCoHwAgULjmBgHBon4AgEAh3MDvWNQPABBIhBv4HYv6AQACiXADv2NRPwBAIBFu4Hcs6gcACCTCDQKCRf0AAIHCVHAEBIv6AQAChXCDgGq/qB8AAL5GuIHpWLUYAOBLhBuYhlWLAQD+wAXFMA2rFgMA/IFwA1OwajEAwF8YloIpulu1eH95HbOqAAC9QriBKbpbtXjVG4fd/811OAAAbzAsBVN0tmpxR7gOBwDgDcINTNPRqsUd4TocAIA3GJaCadqvWlzT8Hc9+I3hqPYq61xcfwMA6BbhBqY7t2pxubOpy37cPRwA0BMMSyFodHX38G+NHKzKOhdDUwCAbtkMo91CIxbX2Ngou92uhoYGxcTEmF0O2mloPqtlBcUeqxYPjo7Q581n3c+ZPQUAfY83v9+EGwSlc9fh/GZ3mQ5VnfJY7C/cZlNWqkPrF2eYWCEAIJC8+f1mWApBKcUxQCNjo/WXys9ZxRgA4BXCDYJWd6sYV9YRbgAA5yPcIGh1t4oxs6cAAB0h3CBodTV7KjstXoZhaPexkwxPAQA8sM4NglpeTvp5s6cyUmL1ZVubvv3kXncbM6gAAOcwWwoh4dzsqeS4AXpkywcqKqtlBhUA9CHMloLlpDgGaMboITL+f6ZUZzOoNhw4zjAVAPRxDEshpHQ3g+rcvakYpgKAvoszNwgp3c2gOqeorFbLCopV7mziomMA6GM4c4OQcm4GVftrbto7N0zFRccA0Pdw5gYhJy8nXVmpDq/3O3c2BwBgbZy5QcixR0do/eIMVdS6tL+8Tqv+/zqb7pw7m1P4168uSE6OG6AUBwsBAoDVEG4QslIcX4WTPx2u7naY6psWvnDA/d8MVQGA9TAshZDX22EqiaEqALAiztwg5H1zmKqrhf468s31cSaPimOYCgAsgBWKYUkNzWfPu21DT5wbpqpztaiqvpnrcgAgSHjz+024gaWdO5sTbrN5XGvTmTB9dSbo8+az7jauywEA83H7BeD/nbttQ/Zl8R3eYby9Nskj2EhfXZez+Pd/YTFAAAgRnLlBn9Hboar2GLoCgMBjWKoLhBt4uz5Oe10NXRF4AMA/CDddINzgnIW/O+DV+jhd6Szw/GjWZapvPkPYAYALRLjpAuEG53Q0TDU4OkKNX5xVqx/+VXR2dqfc2cTZHgDoBuGmC4QbtPfN9XFio/v75LqcjnR0dmewF8NbhCAAfRnhpguEG/TEucDzm91lOlR1yidDVz3RUQDKHBUnm0169+M6d1tnQ17tAxCBCIBVhFy4WbNmjR5//HFVV1dr/PjxysvLU0ZGRqf9N27cqIceekiVlZVKS0vTY489puuuu65H70W4gTcCPXTVWx0FoAs5K9RRKOpJm6/6ADhfMPy7NPPfc0iFm1deeUULFy7U2rVrNXnyZD3zzDPauHGjjh07piFDhpzX/91331V2drZyc3N1/fXX6+WXX9Zjjz2mQ4cOacyYMd2+H+EGvdHd0FUwBp72enpWqH0o6qhPb/frSZ+enpXqqM3sL/FQfe1grCkU3j9Q+8VG99eT2//q8Z0T6H+XF/Lv2VeLoIZUuJk8ebImTZqkX//615KktrY2JSUladmyZXrwwQfP679gwQK5XC5t3brV3TZlyhRNmDBBa9eu7fb9CDfwlUBdq9PXhcqXeKi+djDWFArvH+j9QlW4zaasVIfWL+58NKanQibcnDlzRtHR0Xrttdc0f/58d/uiRYt06tQpbdmy5bx9RowYoZUrV2rFihXutkceeUSbN2/W+++/3+17Em7gT+cCT9yA/nrirb+G3NkdAPCH3fdPv+AhKm9+v029K3htba1aW1uVkJDg0Z6QkKCPPvqow32qq6s77F9dXd1h/5aWFrW0tLifNzY2XmDVQOdSHF+fUm5/p/LOhrPaz54iAAGwmso6V0CvpzM13ARCbm6uVq9ebXYZ6KO+GXak8wNPimNAtwHISqeoAfRNyXGBnShgarhxOBwKDw9XTU2NR3tNTY2GDh3a4T5Dhw71qv+qVau0cuVK9/PGxkYlJSVdYOVA77UPPD0JQFLXQ149GcfnrBCAQDt3zU2gZ0GaGm769++viRMnaufOne5rbtra2rRz504tXbq0w30yMzO1c+dOj2tuduzYoczMzA77R0ZGKjIy0telA37VPvC0b+suAF3IWSGzL9QE0L1QuYA6K9WhvJx0H3xi75g+W+qVV17RokWL9OyzzyojI0PPPPOMXn31VX300UdKSEjQwoULdckllyg3N1fSV1PBp02bpl/+8peaO3euNmzYoF/84hdMBQd6yNtQ1Fmf3u7ni7NSwfglHqqvHYw1hcL7mzGl+v5Zl6mu3RIJgfh36Yv9fCFkZkud8+tf/9q9iN+ECRP0q1/9SpMnT5YkTZ8+XcnJycrPz3f337hxo37yk5+4F/H793//dxbxAyzErHDVV187GGsKhfc3Y7++LOTCTSARbgAACD3e/H6HBagmAACAgCDcAAAASyHcAAAASyHcAAAASyHcAAAASyHcAAAASyHcAAAASyHcAAAASyHcAAAASyHcAAAASzH1ruBmOHe3icbGRpMrAQAAPXXud7snd43qc+Hm9OnTkqSkpCSTKwEAAN46ffq07HZ7l3363I0z29ra9Nlnn2nQoEGy2Wy9fp3GxkYlJSXpk08+4QacAcDxDjyOeWBxvAOL4x1YvjjehmHo9OnTGjZsmMLCur6qps+duQkLC9Pw4cN99noxMTH8wwggjnfgccwDi+MdWBzvwLrQ493dGZtzuKAYAABYCuEGAABYCuGmlyIjI/XII48oMjLS7FL6BI534HHMA4vjHVgc78AK9PHucxcUAwAAa+PMDQAAsBTCDQAAsBTCDQAAsBTCTRfWrFmj5ORkRUVFafLkyTpw4ECX/Tdu3KjLL79cUVFRGjt2rN58880AVWoN3hzv/Px82Ww2j0dUVFQAqw1thYWFmjdvnoYNGyabzabNmzd3u8+ePXt09dVXKzIyUqmpqcrPz/d7nVbh7fHes2fPeX/fNptN1dXVgSk4xOXm5mrSpEkaNGiQhgwZovnz5+vYsWPd7sd3eO/05nj7+zuccNOJV155RStXrtQjjzyiQ4cOafz48Zo9e7ZOnjzZYf93331XOTk5Wrx4sYqLizV//nzNnz9fR44cCXDlocnb4y19tRjUiRMn3I+qqqoAVhzaXC6Xxo8frzVr1vSof0VFhebOnasZM2aopKREK1as0B133KG33nrLz5Vag7fH+5xjx455/I0PGTLETxVay969e7VkyRLt379fO3bs0NmzZzVr1iy5XK5O9+E7vPd6c7wlP3+HG+hQRkaGsWTJEvfz1tZWY9iwYUZubm6H/b///e8bc+fO9WibPHmycdddd/m1Tqvw9ni/+OKLht1uD1B11ibJ2LRpU5d9HnjgAeOqq67yaFuwYIExe/ZsP1ZmTT053rt37zYkGZ9//nlAarK6kydPGpKMvXv3dtqH73Df6cnx9vd3OGduOnDmzBkdPHhQM2fOdLeFhYVp5syZ2rdvX4f77Nu3z6O/JM2ePbvT/vhab463JDU1NWnkyJFKSkrSDTfcoA8++CAQ5fZJ/H2bY8KECUpMTNR3v/tdFRUVmV1OyGpoaJAkxcbGdtqHv3Hf6cnxlvz7HU646UBtba1aW1uVkJDg0Z6QkNDpmHd1dbVX/fG13hzv0aNH64UXXtCWLVv0hz/8QW1tbZo6dar+9re/BaLkPqezv+/GxkZ98cUXJlVlXYmJiVq7dq1ef/11vf7660pKStL06dN16NAhs0sLOW1tbVqxYoWysrI0ZsyYTvvxHe4bPT3e/v4O73M3zoQ1ZGZmKjMz0/186tSpuuKKK/Tss8/q0UcfNbEy4MKNHj1ao0ePdj+fOnWqPv74Yz399NN66aWXTKws9CxZskRHjhzRO++8Y3YpfUJPj7e/v8M5c9MBh8Oh8PBw1dTUeLTX1NRo6NChHe4zdOhQr/rja7053u1FREQoPT1dZWVl/iixz+vs7zsmJkYXXXSRSVX1LRkZGfx9e2np0qXaunWrdu/ereHDh3fZl+/wC+fN8W7P19/hhJsO9O/fXxMnTtTOnTvdbW1tbdq5c6dH0vymzMxMj/6StGPHjk7742u9Od7ttba26vDhw0pMTPRXmX0af9/mKykp4e+7hwzD0NKlS7Vp0ybt2rVLKSkp3e7D33jv9eZ4t+fz73C/Xaoc4jZs2GBERkYa+fn5xocffmj8y7/8i3HxxRcb1dXVhmEYxq233mo8+OCD7v5FRUVGv379jCeeeMI4evSo8cgjjxgRERHG4cOHzfoIIcXb47169WrjrbfeMj7++GPj4MGDxg9+8AMjKirK+OCDD8z6CCHl9OnTRnFxsVFcXGxIMp566imjuLjYqKqqMgzDMB588EHj1ltvdfcvLy83oqOjjX/91381jh49aqxZs8YIDw83tm3bZtZHCCneHu+nn37a2Lx5s1FaWmocPnzYuPfee42wsDDj7bffNusjhJR77rnHsNvtxp49e4wTJ064H83Nze4+fIf7Tm+Ot7+/wwk3XcjLyzNGjBhh9O/f38jIyDD279/v3jZt2jRj0aJFHv1fffVV47LLLjP69+9vXHXVVcYf//jHAFcc2rw53itWrHD3TUhIMK677jrj0KFDJlQdms5NNW7/OHeMFy1aZEybNu28fSZMmGD079/fGDVqlPHiiy8GvO5Q5e3xfuyxx4xLL73UiIqKMmJjY43p06cbu3btMqf4ENTRsZbk8TfLd7jv9OZ4+/s7nLuCAwAAS+GaGwAAYCmEGwAAYCmEGwAAYCmEGwAAYCmEGwAAYCmEGwAAYCmEGwAAYCmEGwAAYCmEGwCWl5+fr4svvjgg73Xbbbdp/vz5AXkvAB0j3ABAL1RWVspms6mkpMTsUgC0Q7gBAACWQrgB0CvTp0/XsmXLtGLFCg0ePFgJCQlat26dXC6Xbr/9dg0aNEipqan605/+5N7nyJEjmjNnjgYOHKiEhATdeuutqq2tdW/ftm2brrnmGl188cWKi4vT9ddfr48//ti9/dzZkjfeeEMzZsxQdHS0xo8fr3379nnUlp+frxEjRig6Olo33nij6urqzqt/y5YtuvrqqxUVFaVRo0Zp9erV+vLLL93bbTabfvvb32rOnDm66KKLNGrUKL322mvu7SkpKZKk9PR02Ww2TZ8+3eP1n3jiCSUmJiouLk5LlizR2bNne3egAXiNcAOg137/+9/L4XDowIEDWrZsme655x7dcsstmjp1qg4dOqRZs2bp1ltvVXNzs06dOqVvf/vbSk9P13vvvadt27appqZG3//+992v53K5tHLlSr333nvauXOnwsLCdOONN6qtrc3jfX/84x/r/vvvV0lJiS677DLl5OS4g8mf//xnLV68WEuXLlVJSYlmzJihn/3sZx77/8///I8WLlyoe++9Vx9++KGeffZZ5efn6+c//7lHv4ceekj/+I//qPfff1//9E//pB/84Ac6evSoJOnAgQOSpLffflsnTpzQG2+84d5v9+7d+vjjj7V79279/ve/V35+vvLz83123AF0w2f3FwfQp0ybNs245ppr3M+//PJLY8CAAcatt97qbjtx4oQhydi3b5/x6KOPGrNmzfJ4jU8++cSQZBw7dqzD93A6nYYk4/Dhw4ZhGEZFRYUhyXj++efdfT744ANDknH06FHDMAwjJyfHuO666zxeZ8GCBYbdbnc//853vmP84he/8Ojz0ksvGYmJie7nkoy7777bo8/kyZONe+65x6OW4uJijz6LFi0yRo4caXz55ZfutltuucVYsGBBh58RgO9x5gZAr40bN8793+Hh4YqLi9PYsWPdbQkJCZKkkydP6v3339fu3bs1cOBA9+Pyyy+XJPfQU2lpqXJycjRq1CjFxMQoOTlZknT8+PFO3zcxMdH9HpJ09OhRTZ482aN/Zmamx/P3339fP/3pTz1qufPOO3XixAk1Nzd3ul9mZqb7zE1XrrrqKoWHh3vUeK4+AP7Xz+wCAISuiIgIj+c2m82jzWazSZLa2trU1NSkefPm6bHHHjvvdc4FlHnz5mnkyJFat26dhg0bpra2No0ZM0Znzpzp9H2/+R491dTUpNWrV+umm246b1tUVFSPX6czHR0Xb+oDcGEINwAC4uqrr9brr7+u5ORk9et3/ldPXV2djh07pnXr1unaa6+VJL3zzjtev88VV1yhP//5zx5t+/fvP6+WY8eOKTU1tcvX2r9/vxYuXOjxPD09XZLUv39/SVJra6vXNQLwL8INgIBYsmSJ1q1bp5ycHD3wwAOKjY1VWVmZNmzYoOeff16DBw9WXFycnnvuOSUmJur48eN68MEHvX6f5cuXKysrS0888YRuuOEGvfXWW9q2bZtHn4cffljXX3+9RowYoZtvvllhYWF6//33deTIEY+Ljzdu3Khvfetbuuaaa/Sf//mfOnDggH73u99JkoYMGaKLLrpI27Zt0/DhwxUVFSW73X5hBwmAT3DNDYCAGDZsmIqKitTa2qpZs2Zp7NixWrFihS6++GKFhYUpLCxMGzZs0MGDBzVmzBjdd999evzxx71+nylTpmjdunX6j//4D40fP17bt2/XT37yE48+s2fP1tatW7V9+3ZNmjRJU6ZM0dNPP62RI0d69Fu9erU2bNigcePGaf369SooKNCVV14pSerXr59+9atf6dlnn9WwYcN0ww039P7gAPApm2EYhtlFAECwsdls2rRpE7dSAEIQZ24AAIClEG4AAIClcEExAHSAEXsgdHHmBgAAWArhBgAAWArhBgAAWArhBgAAWArhBgAAWArhBgAAWArhBgAAWArhBgAAWArhBgAAWMr/Ae5AlZTds4qHAAAAAElFTkSuQmCC\n"},"metadata":{}}]},{"cell_type":"code","source":[],"metadata":{"id":"vtvelphRFUUY","executionInfo":{"status":"ok","timestamp":1745016802409,"user_tz":420,"elapsed":0,"user":{"displayName":"Kim J","userId":"00693939407288198498"}}},"execution_count":17,"outputs":[]}]}