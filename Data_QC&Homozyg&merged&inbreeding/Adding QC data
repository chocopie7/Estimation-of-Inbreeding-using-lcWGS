{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1ZJOYSwbdrU1oOtzuSmBOuXGDHKmXpCzN","timestamp":1724046620707},{"file_id":"14lbIGZDFIYDCPjQUJHAXLj6LlTBEBoZu","timestamp":1721954973148}],"authorship_tag":"ABX9TyOq9bFcnNgblPOBzbcL9sj/"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"9ilvJXwtMCC7"},"outputs":[],"source":["import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","import os"]},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"yurRVVFgMVbt","executionInfo":{"status":"ok","timestamp":1745016480371,"user_tz":420,"elapsed":19011,"user":{"displayName":"Kim J","userId":"00693939407288198498"}},"outputId":"f487e382-eaac-4289-eb1b-6e3c9bd9e436"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"code","source":["cd /content/drive/MyDrive/Colab Notebooks/Pellegrini Projects/Inbreeding/Data_QC&Homozyg&merged&inbreeding/homozyg"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Fg6xoKGrXbYL","executionInfo":{"status":"ok","timestamp":1745016481973,"user_tz":420,"elapsed":1597,"user":{"displayName":"Kim J","userId":"00693939407288198498"}},"outputId":"bf9d4465-0aba-461f-c9cb-adb98023de0b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["/content/drive/MyDrive/Colab Notebooks/Pellegrini Projects/Inbreeding/Data_QC&Homozyg&merged&inbreeding/homozyg\n"]}]},{"cell_type":"code","source":["list_homozyg=os.listdir('/content/drive/MyDrive/Colab Notebooks/Pellegrini Projects/Inbreeding/Data_QC&Homozyg&merged&inbreeding/homozyg')"],"metadata":{"id":"oVxVf3PhXvFR"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["dogid=[]\n","for i in list_homozyg:\n","  dogid.append(i.split('d-')[0])"],"metadata":{"id":"F9Vwf8gsMclN"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df_homozyg=pd.DataFrame()\n","for i in list_homozyg:\n","  df_homozyg=pd.concat([df_homozyg,pd.read_fwf(i)])\n","df_homozyg.index=dogid"],"metadata":{"id":"hirobKxOg7s_"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["cd .."],"metadata":{"id":"KFMbfRKBWWTO","executionInfo":{"status":"ok","timestamp":1745016548781,"user_tz":420,"elapsed":17,"user":{"displayName":"Kim J","userId":"00693939407288198498"}},"outputId":"fcbb38f8-7b11-458c-bbc7-4b160b83d4d1","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["/content/drive/MyDrive/Colab Notebooks/Pellegrini Projects/Inbreeding/Data_QC&Homozyg&merged&inbreeding\n"]}]},{"cell_type":"code","source":["df_inbreeding=pd.read_fwf('inbreeding.het')\n","filter=df_inbreeding['FID'].str.contains('/u/project/pellegrini/gkislik/bam/DW')\n","df_inbreeding=df_inbreeding[~filter]\n","df_inbreeding.drop(df_inbreeding.tail(2).index, inplace=False)"],"metadata":{"id":"yZ1sh7Z_cSAn","executionInfo":{"status":"error","timestamp":1747401433418,"user_tz":420,"elapsed":97,"user":{"displayName":"Kim J","userId":"00693939407288198498"}},"outputId":"81831dcb-f8a6-4022-82ef-e0719022f259","colab":{"base_uri":"https://localhost:8080/","height":198}},"execution_count":null,"outputs":[{"output_type":"error","ename":"NameError","evalue":"name 'pd' is not defined","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-1-6581ceddab33>\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mdf_inbreeding\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mpd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mread_table\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'inbreeding.het'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      2\u001b[0m \u001b[0mfilter\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdf_inbreeding\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'FID'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mstr\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcontains\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'/u/project/pellegrini/gkislik/bam/DW'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0mdf_inbreeding\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdf_inbreeding\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m~\u001b[0m\u001b[0mfilter\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0mdf_inbreeding\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdrop\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdf_inbreeding\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtail\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m2\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mindex\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0minplace\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mFalse\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'pd' is not defined"]}]},{"cell_type":"code","source":["index=[]\n","for i in df_inbreeding['FID']:\n","  index.append(i.split('bam/')[1].split('d-')[0])\n","df_inbreeding.index=index"],"metadata":{"id":"2GjgHccCJgz4"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df_inbreeding"],"metadata":{"id":"k_A2bVvbLRw6","executionInfo":{"status":"ok","timestamp":1745016549546,"user_tz":420,"elapsed":88,"user":{"displayName":"Kim J","userId":"00693939407288198498"}},"outputId":"876f30d4-5916-4fb5-b65b-26585775223a","colab":{"base_uri":"https://localhost:8080/","height":424}},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                                   FID  \\\n","100  /u/home/g/gkislik/project-pellegrini/bam/100d-...   \n","102  /u/home/g/gkislik/project-pellegrini/bam/102d-...   \n","104  /u/home/g/gkislik/project-pellegrini/bam/104d-...   \n","105  /u/home/g/gkislik/project-pellegrini/bam/105d-...   \n","106  /u/home/g/gkislik/project-pellegrini/bam/106d-...   \n","..                                                 ...   \n","96   /u/home/g/gkislik/project-pellegrini/bam/96d-W...   \n","97   /u/home/g/gkislik/project-pellegrini/bam/97d-W...   \n","98   /u/home/g/gkislik/project-pellegrini/bam/98d-W...   \n","99   /u/home/g/gkislik/project-pellegrini/bam/99d-W...   \n","9    /u/home/g/gkislik/project-pellegrini/bam/9d-WG...   \n","\n","                                                   IID  O(HOM)   E(HOM)  \\\n","100  /u/home/g/gkislik/project-pellegrini/bam/100d-...   20502  20920.0   \n","102  /u/home/g/gkislik/project-pellegrini/bam/102d-...   16000  14730.0   \n","104  /u/home/g/gkislik/project-pellegrini/bam/104d-...   16157  15140.0   \n","105  /u/home/g/gkislik/project-pellegrini/bam/105d-...   20563  19800.0   \n","106  /u/home/g/gkislik/project-pellegrini/bam/106d-...   25896  25960.0   \n","..                                                 ...     ...      ...   \n","96   /u/home/g/gkislik/project-pellegrini/bam/96d-W...   24847  24270.0   \n","97   /u/home/g/gkislik/project-pellegrini/bam/97d-W...   25637  25430.0   \n","98   /u/home/g/gkislik/project-pellegrini/bam/98d-W...   21349  21210.0   \n","99   /u/home/g/gkislik/project-pellegrini/bam/99d-W...   19031  19280.0   \n","9    /u/home/g/gkislik/project-pellegrini/bam/9d-WG...   26193  28200.0   \n","\n","     N(NM)        F  \n","100  25536 -0.09109  \n","102  17671  0.43120  \n","104  18201  0.33270  \n","105  23854  0.18810  \n","106  31529 -0.01134  \n","..     ...      ...  \n","96   29350  0.11330  \n","97   30879  0.03730  \n","98   25778  0.03014  \n","99   23656 -0.05572  \n","9    34600 -0.31280  \n","\n","[96 rows x 6 columns]"],"text/html":["\n","  <div id=\"df-294c17df-1744-4095-bccb-766f2a05bdfa\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>FID</th>\n","      <th>IID</th>\n","      <th>O(HOM)</th>\n","      <th>E(HOM)</th>\n","      <th>N(NM)</th>\n","      <th>F</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>100</th>\n","      <td>/u/home/g/gkislik/project-pellegrini/bam/100d-...</td>\n","      <td>/u/home/g/gkislik/project-pellegrini/bam/100d-...</td>\n","      <td>20502</td>\n","      <td>20920.0</td>\n","      <td>25536</td>\n","      <td>-0.09109</td>\n","    </tr>\n","    <tr>\n","      <th>102</th>\n","      <td>/u/home/g/gkislik/project-pellegrini/bam/102d-...</td>\n","      <td>/u/home/g/gkislik/project-pellegrini/bam/102d-...</td>\n","      <td>16000</td>\n","      <td>14730.0</td>\n","      <td>17671</td>\n","      <td>0.43120</td>\n","    </tr>\n","    <tr>\n","      <th>104</th>\n","      <td>/u/home/g/gkislik/project-pellegrini/bam/104d-...</td>\n","      <td>/u/home/g/gkislik/project-pellegrini/bam/104d-...</td>\n","      <td>16157</td>\n","      <td>15140.0</td>\n","      <td>18201</td>\n","      <td>0.33270</td>\n","    </tr>\n","    <tr>\n","      <th>105</th>\n","      <td>/u/home/g/gkislik/project-pellegrini/bam/105d-...</td>\n","      <td>/u/home/g/gkislik/project-pellegrini/bam/105d-...</td>\n","      <td>20563</td>\n","      <td>19800.0</td>\n","      <td>23854</td>\n","      <td>0.18810</td>\n","    </tr>\n","    <tr>\n","      <th>106</th>\n","      <td>/u/home/g/gkislik/project-pellegrini/bam/106d-...</td>\n","      <td>/u/home/g/gkislik/project-pellegrini/bam/106d-...</td>\n","      <td>25896</td>\n","      <td>25960.0</td>\n","      <td>31529</td>\n","      <td>-0.01134</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>96</th>\n","      <td>/u/home/g/gkislik/project-pellegrini/bam/96d-W...</td>\n","      <td>/u/home/g/gkislik/project-pellegrini/bam/96d-W...</td>\n","      <td>24847</td>\n","      <td>24270.0</td>\n","      <td>29350</td>\n","      <td>0.11330</td>\n","    </tr>\n","    <tr>\n","      <th>97</th>\n","      <td>/u/home/g/gkislik/project-pellegrini/bam/97d-W...</td>\n","      <td>/u/home/g/gkislik/project-pellegrini/bam/97d-W...</td>\n","      <td>25637</td>\n","      <td>25430.0</td>\n","      <td>30879</td>\n","      <td>0.03730</td>\n","    </tr>\n","    <tr>\n","      <th>98</th>\n","      <td>/u/home/g/gkislik/project-pellegrini/bam/98d-W...</td>\n","      <td>/u/home/g/gkislik/project-pellegrini/bam/98d-W...</td>\n","      <td>21349</td>\n","      <td>21210.0</td>\n","      <td>25778</td>\n","      <td>0.03014</td>\n","    </tr>\n","    <tr>\n","      <th>99</th>\n","      <td>/u/home/g/gkislik/project-pellegrini/bam/99d-W...</td>\n","      <td>/u/home/g/gkislik/project-pellegrini/bam/99d-W...</td>\n","      <td>19031</td>\n","      <td>19280.0</td>\n","      <td>23656</td>\n","      <td>-0.05572</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>/u/home/g/gkislik/project-pellegrini/bam/9d-WG...</td>\n","      <td>/u/home/g/gkislik/project-pellegrini/bam/9d-WG...</td>\n","      <td>26193</td>\n","      <td>28200.0</td>\n","      <td>34600</td>\n","      <td>-0.31280</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>96 rows × 6 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-294c17df-1744-4095-bccb-766f2a05bdfa')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-294c17df-1744-4095-bccb-766f2a05bdfa button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-294c17df-1744-4095-bccb-766f2a05bdfa');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-6f87f0bc-a3fe-4661-b22b-45cbf49d6bb3\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-6f87f0bc-a3fe-4661-b22b-45cbf49d6bb3')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-6f87f0bc-a3fe-4661-b22b-45cbf49d6bb3 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_a929ccc6-fe36-480b-94ff-c4244963c7cd\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df_inbreeding')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_a929ccc6-fe36-480b-94ff-c4244963c7cd button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df_inbreeding');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_inbreeding","summary":"{\n  \"name\": \"df_inbreeding\",\n  \"rows\": 96,\n  \"fields\": [\n    {\n      \"column\": \"FID\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 96,\n        \"samples\": [\n          \"/u/home/g/gkislik/project-pellegrini/bam/84d-WGS_S64_L001_sorted.bam\",\n          \"/u/home/g/gkislik/project-pellegrini/bam/81d-WGS_S61_L001_sorted.bam\",\n          \"/u/home/g/gkislik/project-pellegrini/bam/77d-WGS_S57_L001_sorted.bam\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"IID\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 96,\n        \"samples\": [\n          \"/u/home/g/gkislik/project-pellegrini/bam/84d-WGS_S64_L001_sorted.bam\",\n          \"/u/home/g/gkislik/project-pellegrini/bam/81d-WGS_S61_L001_sorted.bam\",\n          \"/u/home/g/gkislik/project-pellegrini/bam/77d-WGS_S57_L001_sorted.bam\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"O(HOM)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 8865,\n        \"min\": 6071,\n        \"max\": 56741,\n        \"num_unique_values\": 96,\n        \"samples\": [\n          27225,\n          15972,\n          25041\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"E(HOM)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11368.847445359414,\n        \"min\": 5643.0,\n        \"max\": 69740.0,\n        \"num_unique_values\": 94,\n        \"samples\": [\n          12200.0,\n          23980.0,\n          24200.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"N(NM)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 14174,\n        \"min\": 6767,\n        \"max\": 86432,\n        \"num_unique_values\": 96,\n        \"samples\": [\n          36000,\n          18740,\n          30636\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"F\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.31605644209074324,\n        \"min\": -0.8786,\n        \"max\": 0.5562,\n        \"num_unique_values\": 96,\n        \"samples\": [\n          -0.3181,\n          0.1545,\n          -0.03833\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["df=pd.concat([df_homozyg,df_inbreeding],axis=1)\n","df.drop(labels='FID',axis=1,inplace=True)\n","df.drop(labels='IID',axis=1, inplace=True)\n","df.drop(labels='PHE',axis=1,inplace=True)\n","df.drop(labels='O(HOM)',axis=1,inplace=True)\n","df.drop(labels='E(HOM)',axis=1,inplace=True)\n","df.drop(labels='N(NM)',axis=1,inplace=True)"],"metadata":{"id":"dZbHucWfJJ0M"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["cd QC"],"metadata":{"id":"SlebnJgDo8T_","executionInfo":{"status":"ok","timestamp":1745016549556,"user_tz":420,"elapsed":6,"user":{"displayName":"Kim J","userId":"00693939407288198498"}},"outputId":"cddcddec-9e6c-4e2a-fbf2-27fe83cb4078","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["/content/drive/MyDrive/Colab Notebooks/Pellegrini Projects/Inbreeding/Data_QC&Homozyg&merged&inbreeding/QC\n"]}]},{"cell_type":"code","source":["list_qc=os.listdir('/content/drive/MyDrive/Colab Notebooks/Pellegrini Projects/Inbreeding/Data_QC&Homozyg&merged&inbreeding/QC')"],"metadata":{"id":"NNw8PH8xpFfK"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["list_qc"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1R-XCNewDlEA","executionInfo":{"status":"ok","timestamp":1745016549593,"user_tz":420,"elapsed":22,"user":{"displayName":"Kim J","userId":"00693939407288198498"}},"outputId":"6d85c6b5-de3f-4c98-c983-40a51be59cc3"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['105d-WGS_S81_L001.QC.txt.head40.txt',\n"," '115d-WGS_S89_L001.QC.txt.head40.txt',\n"," '104d-WGS_S80_L001.QC.txt.head40.txt',\n"," '121d-WGS_S93_L001.QC.txt.head40.txt',\n"," '117d-WGS_S91_L001.QC.txt.head40.txt',\n"," '116d-WGS_S90_L001.QC.txt.head40.txt',\n"," '111d-WGS_S85_L001.QC.txt.head40.txt',\n"," '100d-WGS_S78_L001.QC.txt.head40.txt',\n"," '102d-WGS_S79_L001.QC.txt.head40.txt',\n"," '112d-WGS_S86_L001.QC.txt.head40.txt',\n"," '119d-WGS_S92_L001.QC.txt.head40.txt',\n"," '110d-WGS_S84_L001.QC.txt.head40.txt',\n"," '108d-WGS_S83_L001.QC.txt.head40.txt',\n"," '114d-WGS_S88_L001.QC.txt.head40.txt',\n"," '106d-WGS_S82_L001.QC.txt.head40.txt',\n"," '113d-WGS_S87_L001.QC.txt.head40.txt',\n"," '32d-WGS_S21_L001.QC.txt.head40.txt',\n"," '14d-WGS_S7_L001.QC.txt.head40.txt',\n"," '25d-WGS_S16_L001.QC.txt.head40.txt',\n"," '36d-WGS_S24_L001.QC.txt.head40.txt',\n"," '15d-WGS_S8_L001.QC.txt.head40.txt',\n"," '3d-WGS_S2_L001.QC.txt.head40.txt',\n"," '40d-WGS_S27_L001.QC.txt.head40.txt',\n"," '41d-WGS_S28_L001.QC.txt.head40.txt',\n"," '17d-WGS_S10_L001.QC.txt.head40.txt',\n"," '27d-WGS_S17_L001.QC.txt.head40.txt',\n"," '34d-WGS_S22_L001.QC.txt.head40.txt',\n"," '2d-WGS_S1_L001.QC.txt.head40.txt',\n"," '28d-WGS_S18_L001.QC.txt.head40.txt',\n"," '38d-WGS_S26_L001.QC.txt.head40.txt',\n"," '37d-WGS_S25_L001.QC.txt.head40.txt',\n"," '122d-WGS_S94_L001.QC.txt.head40.txt',\n"," '16d-WGS_S9_L001.QC.txt.head40.txt',\n"," '23d-WGS_S15_L001.QC.txt.head40.txt',\n"," '19d-WGS_S12_L001.QC.txt.head40.txt',\n"," '29d-WGS_S19_L001.QC.txt.head40.txt',\n"," '30d-WGS_S20_L001.QC.txt.head40.txt',\n"," '35d-WGS_S23_L001.QC.txt.head40.txt',\n"," '123d-WGS_S95_L001.QC.txt.head40.txt',\n"," '124d-WGS_S96_L001.QC.txt.head40.txt',\n"," '18d-WGS_S11_L001.QC.txt.head40.txt',\n"," '20d-WGS_S13_L001.QC.txt.head40.txt',\n"," '22d-WGS_S14_L001.QC.txt.head40.txt',\n"," '46d-WGS_S33_L001.QC.txt.head40.txt',\n"," '67d-WGS_S50_L001.QC.txt.head40.txt',\n"," '70d-WGS_S52_L001.QC.txt.head40.txt',\n"," '62d-WGS_S45_L001.QC.txt.head40.txt',\n"," '50d-WGS_S36_L001.QC.txt.head40.txt',\n"," '71d-WGS_S53_L001.QC.txt.head40.txt',\n"," '63d-WGS_S46_L001.QC.txt.head40.txt',\n"," '69d-WGS_S51_L001.QC.txt.head40.txt',\n"," '51d-WGS_S37_L001.QC.txt.head40.txt',\n"," '52d-WGS_S38_L001.QC.txt.head40.txt',\n"," '49d-WGS_S35_L001.QC.txt.head40.txt',\n"," '5d-WGS_S3_L001.QC.txt.head40.txt',\n"," '64d-WGS_S47_L001.QC.txt.head40.txt',\n"," '59d-WGS_S43_L001.QC.txt.head40.txt',\n"," '47d-WGS_S34_L001.QC.txt.head40.txt',\n"," '57d-WGS_S42_L001.QC.txt.head40.txt',\n"," '42d-WGS_S29_L001.QC.txt.head40.txt',\n"," '45d-WGS_S32_L001.QC.txt.head40.txt',\n"," '44d-WGS_S31_L001.QC.txt.head40.txt',\n"," '56d-WGS_S41_L001.QC.txt.head40.txt',\n"," '55d-WGS_S40_L001.QC.txt.head40.txt',\n"," '43d-WGS_S30_L001.QC.txt.head40.txt',\n"," '54d-WGS_S39_L001.QC.txt.head40.txt',\n"," '65d-WGS_S48_L001.QC.txt.head40.txt',\n"," '6d-WGS_S4_L001.QC.txt.head40.txt',\n"," '66d-WGS_S49_L001.QC.txt.head40.txt',\n"," '61d-WGS_S44_L001.QC.txt.head40.txt',\n"," '88d-WGS_S67_L001.QC.txt.head40.txt',\n"," '86d-WGS_S65_L001.QC.txt.head40.txt',\n"," '72d-WGS_S54_L001.QC.txt.head40.txt',\n"," '99d-WGS_S77_L001.QC.txt.head40.txt',\n"," '78d-WGS_S58_L001.QC.txt.head40.txt',\n"," '87d-WGS_S66_L001.QC.txt.head40.txt',\n"," '89d-WGS_S68_L001.QC.txt.head40.txt',\n"," '98d-WGS_S76_L001.QC.txt.head40.txt',\n"," '81d-WGS_S61_L001.QC.txt.head40.txt',\n"," '9d-WGS_S6_L001.QC.txt.head40.txt',\n"," '92d-WGS_S71_L001.QC.txt.head40.txt',\n"," '75d-WGS_S56_L001.QC.txt.head40.txt',\n"," '96d-WGS_S74_L001.QC.txt.head40.txt',\n"," '8d-WGS_S5_L001.QC.txt.head40.txt',\n"," '82d-WGS_S62_L001.QC.txt.head40.txt',\n"," '83d-WGS_S63_L001.QC.txt.head40.txt',\n"," '80d-WGS_S60_L001.QC.txt.head40.txt',\n"," '93d-WGS_S72_L001.QC.txt.head40.txt',\n"," '97d-WGS_S75_L001.QC.txt.head40.txt',\n"," '95d-WGS_S73_L001.QC.txt.head40.txt',\n"," '90d-WGS_S69_L001.QC.txt.head40.txt',\n"," '84d-WGS_S64_L001.QC.txt.head40.txt',\n"," '77d-WGS_S57_L001.QC.txt.head40.txt',\n"," '79d-WGS_S59_L001.QC.txt.head40.txt',\n"," '91d-WGS_S70_L001.QC.txt.head40.txt',\n"," '73d-WGS_S55_L001.QC.txt.head40.txt']"]},"metadata":{},"execution_count":14}]},{"cell_type":"code","source":["average_coverage={}\n","for i in list_qc:\n","  df_qc=pd.read_table(i)\n","  average_coverage[i.split('d-')[0]]=df_qc['meandepth'].mean()"],"metadata":{"id":"fm3jhRgspN91"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df['meandepth'] = df.index.map(average_coverage)\n","#df.to_csv('coverage-inbreeding.csv')"],"metadata":{"id":"si4rDK9NlmDR"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df[df['meandepth']==df['meandepth'].min()]"],"metadata":{"id":"P1LHDC4AnxO4","colab":{"base_uri":"https://localhost:8080/","height":81},"executionInfo":{"status":"ok","timestamp":1745016609974,"user_tz":420,"elapsed":2,"user":{"displayName":"Kim J","userId":"00693939407288198498"}},"outputId":"b3d8ff1a-dfb7-459f-a42a-c0c5cb1d7808"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    NSEG         KB    KBAVG       F  meandepth\n","87   167  2131910.0  12765.9  0.3897   0.088328"],"text/html":["\n","  <div id=\"df-845c6fb7-8b8d-490b-b48e-7284503b142b\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>NSEG</th>\n","      <th>KB</th>\n","      <th>KBAVG</th>\n","      <th>F</th>\n","      <th>meandepth</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>87</th>\n","      <td>167</td>\n","      <td>2131910.0</td>\n","      <td>12765.9</td>\n","      <td>0.3897</td>\n","      <td>0.088328</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-845c6fb7-8b8d-490b-b48e-7284503b142b')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-845c6fb7-8b8d-490b-b48e-7284503b142b button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-845c6fb7-8b8d-490b-b48e-7284503b142b');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"df[df['meandepth']==df['meandepth']\",\n  \"rows\": 1,\n  \"fields\": [\n    {\n      \"column\": \"NSEG\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 167,\n        \"max\": 167,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          167\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"KB\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 2131910.0,\n        \"max\": 2131910.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          2131910.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"KBAVG\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 12765.9,\n        \"max\": 12765.9,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          12765.9\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"F\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 0.3897,\n        \"max\": 0.3897,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0.3897\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"meandepth\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 0.08832824871794871,\n        \"max\": 0.08832824871794871,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0.08832824871794871\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":17}]},{"cell_type":"code","source":["df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"ks0CO17MIGf6","executionInfo":{"status":"ok","timestamp":1745016610002,"user_tz":420,"elapsed":27,"user":{"displayName":"Kim J","userId":"00693939407288198498"}},"outputId":"f1e8dc2e-82c3-4cce-8cde-79c0055daa6c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     NSEG         KB    KBAVG         F  meandepth\n","102   264  2124370.0  8046.84  0.431200   0.135432\n","100   566  1764250.0  3117.05 -0.091090   0.187589\n","104   290  2092890.0  7216.86  0.332700   0.150493\n","106   441  1708640.0  3874.47 -0.011340   0.262116\n","108   446  1076670.0  2414.07 -0.433100   0.353714\n","..    ...        ...      ...       ...        ...\n","96    462  1878060.0  4065.06  0.113300   0.230171\n","92    375  1563160.0  4168.42  0.006494   0.313049\n","95    333  2061910.0  6191.93  0.365500   0.174155\n","88    588  1534660.0  2609.97 -0.186600   0.243325\n","99    576  1844140.0  3201.64 -0.055720   0.167433\n","\n","[96 rows x 5 columns]"],"text/html":["\n","  <div id=\"df-89ce32b2-3fa4-47b5-bffd-5b603f659915\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>NSEG</th>\n","      <th>KB</th>\n","      <th>KBAVG</th>\n","      <th>F</th>\n","      <th>meandepth</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>102</th>\n","      <td>264</td>\n","      <td>2124370.0</td>\n","      <td>8046.84</td>\n","      <td>0.431200</td>\n","      <td>0.135432</td>\n","    </tr>\n","    <tr>\n","      <th>100</th>\n","      <td>566</td>\n","      <td>1764250.0</td>\n","      <td>3117.05</td>\n","      <td>-0.091090</td>\n","      <td>0.187589</td>\n","    </tr>\n","    <tr>\n","      <th>104</th>\n","      <td>290</td>\n","      <td>2092890.0</td>\n","      <td>7216.86</td>\n","      <td>0.332700</td>\n","      <td>0.150493</td>\n","    </tr>\n","    <tr>\n","      <th>106</th>\n","      <td>441</td>\n","      <td>1708640.0</td>\n","      <td>3874.47</td>\n","      <td>-0.011340</td>\n","      <td>0.262116</td>\n","    </tr>\n","    <tr>\n","      <th>108</th>\n","      <td>446</td>\n","      <td>1076670.0</td>\n","      <td>2414.07</td>\n","      <td>-0.433100</td>\n","      <td>0.353714</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>96</th>\n","      <td>462</td>\n","      <td>1878060.0</td>\n","      <td>4065.06</td>\n","      <td>0.113300</td>\n","      <td>0.230171</td>\n","    </tr>\n","    <tr>\n","      <th>92</th>\n","      <td>375</td>\n","      <td>1563160.0</td>\n","      <td>4168.42</td>\n","      <td>0.006494</td>\n","      <td>0.313049</td>\n","    </tr>\n","    <tr>\n","      <th>95</th>\n","      <td>333</td>\n","      <td>2061910.0</td>\n","      <td>6191.93</td>\n","      <td>0.365500</td>\n","      <td>0.174155</td>\n","    </tr>\n","    <tr>\n","      <th>88</th>\n","      <td>588</td>\n","      <td>1534660.0</td>\n","      <td>2609.97</td>\n","      <td>-0.186600</td>\n","      <td>0.243325</td>\n","    </tr>\n","    <tr>\n","      <th>99</th>\n","      <td>576</td>\n","      <td>1844140.0</td>\n","      <td>3201.64</td>\n","      <td>-0.055720</td>\n","      <td>0.167433</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>96 rows × 5 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-89ce32b2-3fa4-47b5-bffd-5b603f659915')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-89ce32b2-3fa4-47b5-bffd-5b603f659915 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-89ce32b2-3fa4-47b5-bffd-5b603f659915');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-1997f461-0503-4a43-aa37-2e5344a45108\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-1997f461-0503-4a43-aa37-2e5344a45108')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-1997f461-0503-4a43-aa37-2e5344a45108 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_23a1b06b-e059-4c6c-a647-bc952ec4c332\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_23a1b06b-e059-4c6c-a647-bc952ec4c332 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 96,\n  \"fields\": [\n    {\n      \"column\": \"NSEG\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 138,\n        \"min\": 132,\n        \"max\": 653,\n        \"num_unique_values\": 85,\n        \"samples\": [\n          516,\n          264,\n          432\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"KB\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 431174.56851946533,\n        \"min\": 414341.0,\n        \"max\": 2150360.0,\n        \"num_unique_values\": 96,\n        \"samples\": [\n          2024810.0,\n          2131910.0,\n          1474500.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"KBAVG\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2666.1841309948663,\n        \"min\": 1551.84,\n        \"max\": 13356.3,\n        \"num_unique_values\": 96,\n        \"samples\": [\n          5178.53,\n          12765.9,\n          2378.22\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"F\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.31605644209074324,\n        \"min\": -0.8786,\n        \"max\": 0.5562,\n        \"num_unique_values\": 96,\n        \"samples\": [\n          0.1545,\n          0.3897,\n          -0.2634\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"meandepth\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.09073596107595142,\n        \"min\": 0.08832824871794871,\n        \"max\": 0.6146093846153847,\n        \"num_unique_values\": 96,\n        \"samples\": [\n          0.15043433333333334,\n          0.08832824871794871,\n          0.274231717948718\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":18}]},{"cell_type":"code","source":["df.plot.scatter(x='meandepth',y='KB')"],"metadata":{"id":"X1tj-rENBhQL","colab":{"base_uri":"https://localhost:8080/","height":483},"executionInfo":{"status":"ok","timestamp":1745016610427,"user_tz":420,"elapsed":425,"user":{"displayName":"Kim J","userId":"00693939407288198498"}},"outputId":"f09abfed-3dbd-46ff-9b77-151f376307c7"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: xlabel='meandepth', ylabel='KB'>"]},"metadata":{},"execution_count":19},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["df.plot.scatter(x='meandepth',y='F')"],"metadata":{"id":"NvHZOawqB6uw","colab":{"base_uri":"https://localhost:8080/","height":467},"executionInfo":{"status":"ok","timestamp":1745016610675,"user_tz":420,"elapsed":252,"user":{"displayName":"Kim J","userId":"00693939407288198498"}},"outputId":"eaf716b0-81e6-4e65-dd7e-406e12390dc8"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: xlabel='meandepth', ylabel='F'>"]},"metadata":{},"execution_count":20},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":[],"metadata":{"id":"n0w5gLt9IYuH"},"execution_count":null,"outputs":[]}]}